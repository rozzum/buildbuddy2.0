"""
Professional Interior Design Survey Handler for AI Assistant Bot
Handles specialized interior design survey with professional questions
"""

import logging
from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from app.services.database import DatabaseService

logger = logging.getLogger(__name__)
router = Router()

# Professional interior design survey states
class DesignSurveyStates(StatesGroup):
    # Style preferences
    waiting_style_choice = State()
    waiting_color_preference = State()
    waiting_material_preference = State()
    
    # Space and layout preferences
    waiting_space_type = State()
    waiting_room_preference = State()
    waiting_layout_style = State()
    
    # Functional preferences
    waiting_functionality = State()
    waiting_lighting_preference = State()
    waiting_storage_preference = State()
    
    # Budget and timeline
    waiting_budget_range = State()
    waiting_timeline = State()
    waiting_priority = State()
    
    # Lifestyle and personal preferences
    waiting_lifestyle = State()
    waiting_family_needs = State()
    waiting_personal_touch = State()

# Design style options with descriptions
DESIGN_STYLES = {
    'modern': {
        'name': '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π (Modern)',
        'description': '–ß–∏—Å—Ç—ã–µ –ª–∏–Ω–∏–∏, –º–∏–Ω–∏–º–∞–ª–∏–∑–º, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å',
        'keywords': ['–º–∏–Ω–∏–º–∞–ª–∏–∑–º', '—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–æ—Ç–∫—Ä—ã—Ç–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ']
    },
    'classic': {
        'name': '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π (Classic)',
        'description': '–≠–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å, —Ç—Ä–∞–¥–∏—Ü–∏–∏, —Ä–æ—Å–∫–æ—à—å',
        'keywords': ['—ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å', '—Ç—Ä–∞–¥–∏—Ü–∏–∏', '—Ä–æ—Å–∫–æ—à—å', '—Å–∏–º–º–µ—Ç—Ä–∏—è']
    },
    'scandinavian': {
        'name': '–°–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–π (Scandinavian)',
        'description': '–°–≤–µ—Ç–ª–æ—Å—Ç—å, –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —É—é—Ç',
        'keywords': ['—Å–≤–µ—Ç–ª–æ—Å—Ç—å', '–Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ—Å—Ç—å', '—É—é—Ç', '–ø—Ä–æ—Å—Ç–æ—Ç–∞']
    },
    'industrial': {
        'name': '–ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–π (Industrial)',
        'description': '–û—Ç–∫—Ä—ã—Ç—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏, –º–µ—Ç–∞–ª–ª, –±–µ—Ç–æ–Ω',
        'keywords': ['–æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å', '–º–µ—Ç–∞–ª–ª', '–±–µ—Ç–æ–Ω', '–ª–æ—Ñ—Ç']
    },
    'rustic': {
        'name': '–†—É—Å—Ç–∏–∫ (Rustic)',
        'description': '–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ—Å—Ç—å, —Ç–µ–ø–ª–æ—Ç–∞, –¥–µ—Ä–µ–≤–µ–Ω—Å–∫–∏–π —à–∞—Ä–º',
        'keywords': ['–Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ—Å—Ç—å', '—Ç–µ–ø–ª–æ—Ç–∞', '–¥–µ—Ä–µ–≤–µ–Ω—Å–∫–∏–π', '–¥–µ—Ä–µ–≤–æ']
    },
    'contemporary': {
        'name': '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–∫–ª–µ–∫—Ç–∏—á–Ω—ã–π (Contemporary)',
        'description': '–°–º–µ—à–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π, –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å, —Ç—Ä–µ–Ω–¥—ã',
        'keywords': ['—ç–∫–ª–µ–∫—Ç–∏–∫–∞', '–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å', '—Ç—Ä–µ–Ω–¥—ã', '–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å']
    }
}

@router.message(Command("test"))
async def start_design_survey(message: Message, state: FSMContext):
    """Start the professional interior design survey."""
    try:
        user = message.from_user
        db_service = DatabaseService()
        
        # Clear any existing state
        await state.clear()
        
        # Set survey mode flag in database
        db_service.update_user_field(user.id, 'in_survey_mode', True)
        
        # Show survey introduction
        intro_text = """üé® ** –¢–ï–°–¢ –ü–û –î–ò–ó–ê–ô–ù–£ –ò–ù–¢–ï–†–¨–ï–†–ê**

‚è± **–í—Ä–µ–º—è:** 10-15 –º–∏–Ω—É—Ç

üöÄ **–ù–∞—á–∏–Ω–∞–µ–º —Å –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è!**"""
        
        await message.answer(intro_text, parse_mode="Markdown")
        await ask_style_preference(message, state)
        
    except Exception as e:
        logger.error(f"Error starting design survey: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start")

async def ask_style_preference(message: Message, state: FSMContext):
    """Ask for design style preference with visual examples."""
    try:
        # Create inline keyboard with style options
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üèóÔ∏è –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π", callback_data="style_modern")],
            [InlineKeyboardButton(text="üëë –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π", callback_data="style_classic")],
            [InlineKeyboardButton(text="üå≤ –°–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–π", callback_data="style_scandinavian")],
            [InlineKeyboardButton(text="‚öôÔ∏è –ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–π", callback_data="style_industrial")],
            [InlineKeyboardButton(text="ü™µ –†—É—Å—Ç–∏–∫", callback_data="style_rustic")],
            [InlineKeyboardButton(text="üé≠ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–∫–ª–µ–∫—Ç–∏—á–Ω—ã–π", callback_data="style_contemporary")]
        ])
        
        style_text = """üé® **–í–û–ü–†–û–° 1: –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ª—é–±–∏–º—ã–π —Å—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞**

–ö–∞–∂–¥—ã–π —Å—Ç–∏–ª—å –∏–º–µ–µ—Ç —Å–≤–æ–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:

üèóÔ∏è **–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π (Modern)**
‚Ä¢ –ß–∏—Å—Ç—ã–µ –ª–∏–Ω–∏–∏ –∏ –º–∏–Ω–∏–º–∞–ª–∏–∑–º
‚Ä¢ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–µ–≤—ã—à–µ –≤—Å–µ–≥–æ
‚Ä¢ –û—Ç–∫—Ä—ã—Ç—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏

üëë **–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π (Classic)**
‚Ä¢ –≠–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏
‚Ä¢ –†–æ—Å–∫–æ—à–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –°–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏
‚Ä¢ –í–Ω–µ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫—Ä–∞—Å–æ—Ç–∞

üå≤ **–°–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–π (Scandinavian)**
‚Ä¢ –°–≤–µ—Ç–ª–æ—Å—Ç—å –∏ –ø—Ä–æ—Å—Ç–æ—Ç–∞
‚Ä¢ –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –£—é—Ç–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞
‚Ä¢ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω

‚öôÔ∏è **–ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–π (Industrial)**
‚Ä¢ –û—Ç–∫—Ä—ã—Ç—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏
‚Ä¢ –ú–µ—Ç–∞–ª–ª –∏ –±–µ—Ç–æ–Ω
‚Ä¢ –õ–æ—Ñ—Ç-—ç—Å—Ç–µ—Ç–∏–∫–∞
‚Ä¢ –£—Ä–±–∞–Ω–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å

ü™µ **–†—É—Å—Ç–∏–∫ (Rustic)**
‚Ä¢ –ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ—Å—Ç—å –∏ —Ç–µ–ø–ª–æ—Ç–∞
‚Ä¢ –î–µ—Ä–µ–≤–µ–Ω—Å–∫–∏–π —à–∞—Ä–º
‚Ä¢ –¢–µ–∫—Å—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –£—é—Ç–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞

üé≠ **–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–∫–ª–µ–∫—Ç–∏—á–Ω—ã–π (Contemporary)**
‚Ä¢ –°–º–µ—à–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã
‚Ä¢ –ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å

–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å, –∫–æ—Ç–æ—Ä—ã–π –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –æ—Ç—Ä–∞–∂–∞–µ—Ç –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:"""
        
        await message.answer(style_text, parse_mode="Markdown", reply_markup=keyboard)
        await state.set_state(DesignSurveyStates.waiting_style_choice)
        
    except Exception as e:
        logger.error(f"Error asking style preference: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.callback_query(lambda c: c.data.startswith('style_'))
async def handle_style_choice(callback_query: types.CallbackQuery, state: FSMContext):
    """Handle style choice selection."""
    try:
        user_id = callback_query.from_user.id
        db_service = DatabaseService()
        
        # Extract style from callback data
        style = callback_query.data.replace('style_', '')
        
        # Store style choice
        db_service.update_user_field(user_id, 'preferred_style', style)
        db_service.update_user_field(user_id, 'style_description', DESIGN_STYLES[style]['description'])
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, f"–í—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å: {DESIGN_STYLES[style]['name']}", "user")
        
        # Confirm choice and move to next question
        confirm_text = f"""‚úÖ **–°—Ç–∏–ª—å –≤—ã–±—Ä–∞–Ω: {DESIGN_STYLES[style]['name']}**

{DESIGN_STYLES[style]['description']}

–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É..."""
        
        await callback_query.message.edit_text(confirm_text, parse_mode="Markdown")
        
        # Move to color preference question
        await ask_color_preference(callback_query.message, state)
        
    except Exception as e:
        logger.error(f"Error handling style choice: {e}")
        await callback_query.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_color_preference(message: Message, state: FSMContext):
    """Ask for color preference."""
    try:
        color_text = """üé® **–í–û–ü–†–û–° 2: –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞**

–ö–∞–∫–∏–µ —Ü–≤–µ—Ç–∞ –≤—ã–∑—ã–≤–∞—é—Ç —É –≤–∞—Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —ç–º–æ—Ü–∏–∏?

**–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–ª–∏—Ç—Ä—ã:**

üåû **–¢–µ–ø–ª—ã–µ —Ç–æ–Ω–∞**
‚Ä¢ –ë–µ–∂–µ–≤—ã–π, –∫—Ä–µ–º–æ–≤—ã–π, –ø–µ—Å–æ—á–Ω—ã–π
‚Ä¢ –¢–µ—Ä—Ä–∞–∫–æ—Ç–æ–≤—ã–π, –∫–æ—Ä–∏—á–Ω–µ–≤—ã–π
‚Ä¢ –ñ–µ–ª—Ç—ã–π, –æ—Ä–∞–Ω–∂–µ–≤—ã–π
‚Ä¢ –°–æ–∑–¥–∞—é—Ç —É—é—Ç–Ω—É—é, –≥–æ—Å—Ç–µ–ø—Ä–∏–∏–º–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É

‚ùÑÔ∏è **–•–æ–ª–æ–¥–Ω—ã–µ —Ç–æ–Ω–∞**
‚Ä¢ –ë–µ–ª—ã–π, —Å–µ—Ä—ã–π, –≥–æ–ª—É–±–æ–π
‚Ä¢ –°–∏–Ω–∏–π, —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
‚Ä¢ –ó–µ–ª–µ–Ω—ã–π, –º—è—Ç–Ω—ã–π
‚Ä¢ –î–∞—Ä—è—Ç —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ —Å–≤–µ–∂–µ—Å—Ç—å

üåà **–Ø—Ä–∫–∏–µ –∞–∫—Ü–µ–Ω—Ç—ã**
‚Ä¢ –ö—Ä–∞—Å–Ω—ã–π, —Ä–æ–∑–æ–≤—ã–π, –º–∞–ª–∏–Ω–æ–≤—ã–π
‚Ä¢ –ó–µ–ª–µ–Ω—ã–π, –±–∏—Ä—é–∑–æ–≤—ã–π
‚Ä¢ –ñ–µ–ª—Ç—ã–π, –æ—Ä–∞–Ω–∂–µ–≤—ã–π
‚Ä¢ –î–æ–±–∞–≤–ª—è—é—Ç —ç–Ω–µ—Ä–≥–∏–∏ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç–∏

üé≠ **–ú–æ–Ω–æ—Ö—Ä–æ–º–Ω—ã–µ**
‚Ä¢ –û—Ç—Ç–µ–Ω–∫–∏ –æ–¥–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞
‚Ä¢ –ß–µ—Ä–Ω–æ-–±–µ–ª–∞—è –≥–∞–º–º–∞
‚Ä¢ –≠–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å –∏ –º–∏–Ω–∏–º–∞–ª–∏–∑–º

**–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–∏–µ —Ü–≤–µ—Ç–∞ –≤–∞–º –Ω—Ä–∞–≤—è—Ç—Å—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ª–∏—Ç—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(color_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_color_preference)
        
    except Exception as e:
        logger.error(f"Error asking color preference: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_color_preference)
async def handle_color_preference(message: Message, state: FSMContext):
    """Handle color preference response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store color preference
        db_service.update_user_field(user_id, 'color_preference', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_material_preference(message, state)
        
    except Exception as e:
        logger.error(f"Error handling color preference: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_material_preference(message: Message, state: FSMContext):
    """Ask for material preference."""
    try:
        material_text = """üèóÔ∏è **–í–û–ü–†–û–° 3: –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ç–µ–∫—Å—Ç—É—Ä—ã**

–ö–∞–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤—ã–∑—ã–≤–∞—é—Ç —É –≤–∞—Å –ø—Ä–∏—è—Ç–Ω—ã–µ —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–µ –æ—â—É—â–µ–Ω–∏—è?

**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:**

üå≥ **–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã**
‚Ä¢ –î–µ—Ä–µ–≤–æ (–¥—É–±, —è—Å–µ–Ω—å, —Å–æ—Å–Ω–∞)
‚Ä¢ –ö–∞–º–µ–Ω—å (–º—Ä–∞–º–æ—Ä, –≥—Ä–∞–Ω–∏—Ç, –∏–∑–≤–µ—Å—Ç–Ω—è–∫)
‚Ä¢ –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —Ç–∫–∞–Ω–∏ (–ª–µ–Ω, —Ö–ª–æ–ø–æ–∫, —à–µ—Ä—Å—Ç—å)
‚Ä¢ –ö–æ–∂–∞ –∏ –∑–∞–º—à–∞

üîß **–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã**
‚Ä¢ –ú–µ—Ç–∞–ª–ª (—Å—Ç–∞–ª—å, –∞–ª—é–º–∏–Ω–∏–π, –ª–∞—Ç—É–Ω—å)
‚Ä¢ –°—Ç–µ–∫–ª–æ –∏ –∑–µ—Ä–∫–∞–ª–∞
‚Ä¢ –ë–µ—Ç–æ–Ω –∏ –∫–µ—Ä–∞–º–∏–∫–∞
‚Ä¢ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–∫–∞–Ω–∏

üíé **–†–æ—Å–∫–æ—à–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã**
‚Ä¢ –ú—Ä–∞–º–æ—Ä –∏ –≥—Ä–∞–Ω–∏—Ç
‚Ä¢ –î—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–µ –ø–æ—Ä–æ–¥—ã –¥–µ—Ä–µ–≤–∞
‚Ä¢ –®–µ–ª–∫ –∏ –±–∞—Ä—Ö–∞—Ç
‚Ä¢ –•—Ä—É—Å—Ç–∞–ª—å –∏ —Ñ–∞—Ä—Ñ–æ—Ä

**–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤–∞–º –Ω—Ä–∞–≤—è—Ç—Å—è, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(material_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_material_preference)
        
    except Exception as e:
        logger.error(f"Error asking material preference: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_material_preference)
async def handle_material_preference(message: Message, state: FSMContext):
    """Handle material preference response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store material preference
        db_service.update_user_field(user_id, 'material_preference', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_space_type(message, state)
        
    except Exception as e:
        logger.error(f"Error handling material preference: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_space_type(message: Message, state: FSMContext):
    """Ask for space type preference."""
    try:
        space_text = """üè† **–í–û–ü–†–û–° 4: –¢–∏–ø –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞**

–ö–∞–∫–æ–π —Ç–∏–ø –∂–∏–ª–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –æ–±—É—Å—Ç—Ä–∞–∏–≤–∞—Ç—å?

**–ñ–∏–ª—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞:**
üè° **–ß–∞—Å—Ç–Ω—ã–π –¥–æ–º**
‚Ä¢ –ë–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏
‚Ä¢ –°–≤—è–∑—å —Å –ø—Ä–∏—Ä–æ–¥–æ–π
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å

üè¢ **–ö–≤–∞—Ä—Ç–∏—Ä–∞**
‚Ä¢ –ö–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç—å –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –ì–æ—Ä–æ–¥—Å–∫–∞—è —Å—Ä–µ–¥–∞
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞

üè∞ **–ü–µ–Ω—Ç—Ö–∞—É—Å/–õ–æ—Ñ—Ç**
‚Ä¢ –í—ã—Å–æ—Ç–∞ –∏ –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–µ –≤–∏–¥—ã
‚Ä¢ –û—Ç–∫—Ä—ã—Ç—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
‚Ä¢ –ü—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å

**–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π —Ç–∏–ø –∂–∏–ª–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(space_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_space_type)
        
    except Exception as e:
        logger.error(f"Error asking space type: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_space_type)
async def handle_space_type(message: Message, state: FSMContext):
    """Handle space type response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store space type
        db_service.update_user_field(user_id, 'space_type', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_room_preference(message, state)
        
    except Exception as e:
        logger.error(f"Error handling space type: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_room_preference(message: Message, state: FSMContext):
    """Ask for room preference."""
    try:
        room_text = """üö™ **–í–û–ü–†–û–° 5: –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –ø–æ–º–µ—â–µ–Ω–∏—è**

–ö–∞–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è –¥–ª—è –≤–∞—Å –Ω–∞–∏–±–æ–ª–µ–µ –≤–∞–∂–Ω—ã?

**–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–º–µ—â–µ–Ω–∏—è:**
üõãÔ∏è **–ì–æ—Å—Ç–∏–Ω–∞—è**
‚Ä¢ –¶–µ–Ω—Ç—Ä —Å–µ–º–µ–π–Ω–æ–π –∂–∏–∑–Ω–∏
‚Ä¢ –ü—Ä–∏–µ–º –≥–æ—Å—Ç–µ–π
‚Ä¢ –û—Ç–¥—ã—Ö –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è

üçΩÔ∏è **–ö—É—Ö–Ω—è**
‚Ä¢ –ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –ø–∏—â–∏
‚Ä¢ –°–µ–º–µ–π–Ω—ã–µ –∑–∞–≤—Ç—Ä–∞–∫–∏
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ

üõèÔ∏è **–°–ø–∞–ª—å–Ω—è**
‚Ä¢ –û—Ç–¥—ã—Ö –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
‚Ä¢ –õ–∏—á–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
‚Ä¢ –£—é—Ç –∏ –∫–æ–º—Ñ–æ—Ä—Ç

üõÅ **–í–∞–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞**
‚Ä¢ –£—Ç—Ä–µ–Ω–Ω–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
‚Ä¢ –†–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ
‚Ä¢ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å

üè† **–ü—Ä–∏—Ö–æ–∂–∞—è**
‚Ä¢ –ü–µ—Ä–≤–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ
‚Ä¢ –•—Ä–∞–Ω–µ–Ω–∏–µ –≤–µ—â–µ–π
‚Ä¢ –ü–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É –∑–æ–Ω–∞–º–∏

**–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è –¥–ª—è –≤–∞—Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(room_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_room_preference)
        
    except Exception as e:
        logger.error(f"Error asking room preference: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_room_preference)
async def handle_room_preference(message: Message, state: FSMContext):
    """Handle room preference response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store room preference
        db_service.update_user_field(user_id, 'room_preference', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_layout_style(message, state)
        
    except Exception as e:
        logger.error(f"Error handling room preference: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_layout_style(message: Message, state: FSMContext):
    """Ask for layout style preference."""
    try:
        layout_text = """üìê **–í–û–ü–†–û–° 6: –°—Ç–∏–ª—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏**

–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏ –≤–∞–º –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?

**–¢–∏–ø—ã –ø–ª–∞–Ω–∏—Ä–æ–≤–æ–∫:**

üè† **–û—Ç–∫—Ä—ã—Ç–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ (Open Plan)**
‚Ä¢ –ú–∏–Ω–∏–º—É–º –ø–µ—Ä–µ–≥–æ—Ä–æ–¥–æ–∫
‚Ä¢ –°–≤–µ—Ç–ª—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥

üö™ **–ó–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ (Zoned)**
‚Ä¢ –ß–µ—Ç–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
‚Ä¢ –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –ø–æ–º–µ—â–µ–Ω–∏–π
‚Ä¢ –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥
‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å

üîÑ **–ì–∏–±–∫–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ (Flexible)**
‚Ä¢ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ–º—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
‚Ä¢ –ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å
‚Ä¢ –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ—Å—Ç—å

**–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π —Å—Ç–∏–ª—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏ –≤–∞–º –±–æ–ª—å—à–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(layout_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_layout_style)
        
    except Exception as e:
        logger.error(f"Error asking layout style: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_layout_style)
async def handle_layout_style(message: Message, state: FSMContext):
    """Handle layout style response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store layout style
        db_service.update_user_field(user_id, 'layout_style', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_functionality(message, state)
        
    except Exception as e:
        logger.error(f"Error handling layout style: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_functionality(message: Message, state: FSMContext):
    """Ask for functionality preferences."""
    try:
        functionality_text = """‚öôÔ∏è **–í–û–ü–†–û–° 7: –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏**

–ö–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–∞—Å –Ω–∞–∏–±–æ–ª–µ–µ –≤–∞–∂–Ω—ã?

**–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**

üíª **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å**
‚Ä¢ –£–º–Ω—ã–π –¥–æ–º
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
‚Ä¢ –ú–µ–¥–∏–∞-—Å–∏—Å—Ç–µ–º—ã
‚Ä¢ –≠–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å

üìö **–•—Ä–∞–Ω–µ–Ω–∏–µ**
‚Ä¢ –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —à–∫–∞—Ñ—ã
‚Ä¢ –°–∏—Å—Ç–µ–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è
‚Ä¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –≤–µ—â–µ–π
‚Ä¢ –ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–µ–±–µ–ª—å

üå± **–≠–∫–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å**
‚Ä¢ –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –≠–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏–µ
‚Ä¢ –ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞
‚Ä¢ –£—Å—Ç–æ–π—á–∏–≤–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ

**–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–∞—Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(functionality_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_functionality)
        
    except Exception as e:
        logger.error(f"Error asking functionality: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_functionality)
async def handle_functionality(message: Message, state: FSMContext):
    """Handle functionality response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store functionality preference
        db_service.update_user_field(user_id, 'functionality_preference', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_lighting_preference(message, state)
        
    except Exception as e:
        logger.error(f"Error handling functionality: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_lighting_preference(message: Message, state: FSMContext):
    """Ask for lighting preference."""
    try:
        lighting_text = """üí° **–í–û–ü–†–û–° 8: –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –æ—Å–≤–µ—â–µ–Ω–∏–∏**

–ö–∞–∫–æ–π —Ç–∏–ø –æ—Å–≤–µ—â–µ–Ω–∏—è –≤–∞–º –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?

**–¢–∏–ø—ã –æ—Å–≤–µ—â–µ–Ω–∏—è:**

‚òÄÔ∏è **–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ**
‚Ä¢ –ë–æ–ª—å—à–∏–µ –æ–∫–Ω–∞
‚Ä¢ –°–≤–µ—Ç–æ–≤—ã–µ –∫–æ–ª–æ–¥—Ü—ã
‚Ä¢ –ó–µ—Ä–∫–∞–ª—å–Ω—ã–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
‚Ä¢ –°–≤–µ—Ç–ª—ã–µ —Ç–æ–Ω–∞

üí° **–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ**
‚Ä¢ –¢–æ—á–µ—á–Ω—ã–µ —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∏
‚Ä¢ –ü–æ–¥—Å–≤–µ—Ç–∫–∞
‚Ä¢ –ù–∞—Å—Ç–µ–Ω–Ω—ã–µ –±—Ä–∞
‚Ä¢ –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –ª–∞–º–ø—ã

üåÖ **–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ**
‚Ä¢ –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π + –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–≤–µ—Ç
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
‚Ä¢ –†–∞–∑–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –æ—Å–≤–µ—â–µ–Ω–∏—è
‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å

**–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π —Ç–∏–ø –æ—Å–≤–µ—â–µ–Ω–∏—è –≤–∞–º –±–æ–ª—å—à–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(lighting_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_lighting_preference)
        
    except Exception as e:
        logger.error(f"Error asking lighting preference: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_lighting_preference)
async def handle_lighting_preference(message: Message, state: FSMContext):
    """Handle lighting preference response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store lighting preference
        db_service.update_user_field(user_id, 'lighting_preference', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_storage_preference(message, state)
        
    except Exception as e:
        logger.error(f"Error handling lighting preference: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_storage_preference(message: Message, state: FSMContext):
    """Ask for storage preference."""
    try:
        storage_text = """üóÑÔ∏è **–í–û–ü–†–û–° 9: –°–∏—Å—Ç–µ–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è**

–ö–∞–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∞–º –Ω—É–∂–Ω—ã?

**–¢–∏–ø—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è:**

üì¶ **–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã**
‚Ä¢ –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —à–∫–∞—Ñ—ã
‚Ä¢ –ù–∏—à–∏ –∏ –ø–æ–ª–∫–∏
‚Ä¢ –ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–µ–±–µ–ª—å
‚Ä¢ –°–∫—Ä—ã—Ç–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ

üé® **–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã**
‚Ä¢ –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–ª–∫–∏
‚Ä¢ –°—Ç–µ–ª–ª–∞–∂–∏
‚Ä¢ –ö–æ—Ä–∑–∏–Ω—ã –∏ –∫–æ—Ä–æ–±–∫–∏
‚Ä¢ –í–∏–¥–∏–º—ã–µ —Å–∏—Å—Ç–µ–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è

üîí **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã**
‚Ä¢ –ì–∞—Ä–¥–µ—Ä–æ–±–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã
‚Ä¢ –ö–ª–∞–¥–æ–≤—ã–µ
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ

**–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∞–º –Ω—É–∂–Ω—ã, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(storage_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_storage_preference)
        
    except Exception as e:
        logger.error(f"Error asking storage preference: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_storage_preference)
async def handle_storage_preference(message: Message, state: FSMContext):
    """Handle storage preference response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store storage preference
        db_service.update_user_field(user_id, 'storage_preference', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_budget_range(message, state)
        
    except Exception as e:
        logger.error(f"Error handling storage preference: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_budget_range(message: Message, state: FSMContext):
    """Ask for budget range."""
    try:
        budget_text = """üí∞ **–í–û–ü–†–û–° 10: –ë—é–¥–∂–µ—Ç–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω**

–ö–∞–∫–æ–π –±—é–¥–∂–µ—Ç –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –Ω–∞ –ø—Ä–æ–µ–∫—Ç?

**–ë—é–¥–∂–µ—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:**

üí∏ **–≠–∫–æ–Ω–æ–º–Ω—ã–π (–¥–æ $50,000)**
‚Ä¢ –ë–∞–∑–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –ü—Ä–æ—Å—Ç—ã–µ —Ä–µ—à–µ–Ω–∏—è
‚Ä¢ DIY —ç–ª–µ–º–µ–Ω—Ç—ã
‚Ä¢ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å

üíµ **–°—Ä–µ–¥–Ω–∏–π ($50,000 - $150,000)**
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
‚Ä¢ –î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∞—è –º–µ–±–µ–ª—å
‚Ä¢ –ë–∞–ª–∞–Ω—Å —Ü–µ–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–∞

üíé **–ü—Ä–µ–º–∏—É–º ($150,000+)**
‚Ä¢ –õ—é–∫—Å–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
‚Ä¢ –î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∞—è –º–µ–±–µ–ª—å
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ

**–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –±—é–¥–∂–µ—Ç–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(budget_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_budget_range)
        
    except Exception as e:
        logger.error(f"Error asking budget range: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_budget_range)
async def handle_budget_range(message: Message, state: FSMContext):
    """Handle budget range response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store budget range
        db_service.update_user_field(user_id, 'budget_range', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_timeline(message, state)
        
    except Exception as e:
        logger.error(f"Error handling budget range: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_timeline(message: Message, state: FSMContext):
    """Ask for project timeline."""
    try:
        timeline_text = """‚è∞ **–í–û–ü–†–û–° 11: –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏**

–ö–∞–∫–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏ —É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞?

**–í—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:**

üöÄ **–°—Ä–æ—á–Ω–æ (1-3 –º–µ—Å—è—Ü–∞)**
‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ —Ä–µ—à–µ–Ω–∏—è
‚Ä¢ –ì–æ—Ç–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
‚Ä¢ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ—Å—Ç—å

üìÖ **–°—Ä–µ–¥–Ω–∏–π —Å—Ä–æ–∫ (3-6 –º–µ—Å—è—Ü–µ–≤)**
‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥
‚Ä¢ –ë–∞–ª–∞–Ω—Å –≤—Ä–µ–º–µ–Ω–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞

üïê **–ù–µ—Ç —Å–ø–µ—à–∫–∏ (6+ –º–µ—Å—è—Ü–µ–≤)**
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
‚Ä¢ –õ—é–∫—Å–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ

**–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(timeline_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_timeline)
        
    except Exception as e:
        logger.error(f"Error asking timeline: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_timeline)
async def handle_timeline(message: Message, state: FSMContext):
    """Handle timeline response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store timeline
        db_service.update_user_field(user_id, 'timeline', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_priority(message, state)
        
    except Exception as e:
        logger.error(f"Error handling timeline: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_priority(message: Message, state: FSMContext):
    """Ask for project priorities."""
    try:
        priority_text = """üéØ **–í–û–ü–†–û–° 12: –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞**

–ß—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ –≤—Å–µ–≥–æ –≤ –ø—Ä–æ–µ–∫—Ç–µ?

**–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã:**

üè† **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å**
‚Ä¢ –£–¥–æ–±—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å
‚Ä¢ –≠—Ä–≥–æ–Ω–æ–º–∏–∫–∞
‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å

üé® **–≠—Å—Ç–µ—Ç–∏–∫–∞**
‚Ä¢ –ö—Ä–∞—Å–æ—Ç–∞ –∏ —Å—Ç–∏–ª—å
‚Ä¢ –í–∏–∑—É–∞–ª—å–Ω–∞—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –ì–∞—Ä–º–æ–Ω–∏—è –∏ –±–∞–ª–∞–Ω—Å
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å

üí∞ **–≠–∫–æ–Ω–æ–º–∏—è**
‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±—é–¥–∂–µ—Ç–∞
‚Ä¢ –î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å
‚Ä¢ –≠–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
‚Ä¢ –†–∞–∑—É–º–Ω—ã–µ —Ç—Ä–∞—Ç—ã

**–ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ –≤—Å–µ–≥–æ, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(priority_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_priority)
        
    except Exception as e:
        logger.error(f"Error asking priority: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_priority)
async def handle_priority(message: Message, state: FSMContext):
    """Handle priority response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store priority
        db_service.update_user_field(user_id, 'project_priority', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_lifestyle(message, state)
        
    except Exception as e:
        logger.error(f"Error handling priority: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_lifestyle(message: Message, state: FSMContext):
    """Ask for lifestyle preferences."""
    try:
        lifestyle_text = """üåü **–í–û–ü–†–û–° 13: –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏**

–ö–∞–∫–æ–π —É –≤–∞—Å –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏?

**–¢–∏–ø—ã –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏:**

üè† **–î–æ–º–∞—à–Ω–∏–π**
‚Ä¢ –ú–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ–º–∞
‚Ä¢ –°–µ–º–µ–π–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏
‚Ä¢ –£—é—Ç –∏ –∫–æ–º—Ñ–æ—Ä—Ç
‚Ä¢ –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å

üåç **–ê–∫—Ç–∏–≤–Ω—ã–π**
‚Ä¢ –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ —Å–ø–æ—Ä—Ç
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
‚Ä¢ –î–∏–Ω–∞–º–∏—á–Ω–æ—Å—Ç—å
‚Ä¢ –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å

üíº **–î–µ–ª–æ–≤–æ–π**
‚Ä¢ –†–∞–±–æ—Ç–∞ –∏–∑ –¥–æ–º–∞
‚Ä¢ –í—Å—Ç—Ä–µ—á–∏ –∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ä–µ–¥–∞
‚Ä¢ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å

**–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π —É –≤–∞—Å –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(lifestyle_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_lifestyle)
        
    except Exception as e:
        logger.error(f"Error asking lifestyle: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_lifestyle)
async def handle_lifestyle(message: Message, state: FSMContext):
    """Handle lifestyle response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store lifestyle
        db_service.update_user_field(user_id, 'lifestyle', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_family_needs(message, state)
        
    except Exception as e:
        logger.error(f"Error handling lifestyle: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_family_needs(message: Message, state: FSMContext):
    """Ask for family needs."""
    try:
        family_text = """üë®‚Äçüë©‚Äçüëß‚Äçüë¶ **–í–û–ü–†–û–° 14: –°–µ–º–µ–π–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏**

–ö–∞–∫–∏–µ —É –≤–∞—Å —Å–µ–º–µ–π–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏?

**–°–µ–º–µ–π–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏:**

üë§ **–û–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫**
‚Ä¢ –õ–∏—á–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –ú–∏–Ω–∏–º–∞–ª–∏–∑–º

üë´ **–ü–∞—Ä–∞**
‚Ä¢ –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞
‚Ä¢ –°–æ–≤–º–µ—Å—Ç–Ω–æ–µ –≤—Ä–µ–º—è
‚Ä¢ –õ–∏—á–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
‚Ä¢ –ì–æ—Å—Ç–µ–ø—Ä–∏–∏–º—Å—Ç–≤–æ

üë®‚Äçüë©‚Äçüëß‚Äçüë¶ **–°–µ–º—å—è —Å –¥–µ—Ç—å–º–∏**
‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
‚Ä¢ –ò–≥—Ä–æ–≤—ã–µ –∑–æ–Ω—ã
‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å
‚Ä¢ –î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å

üë¥ **–ú—É–ª—å—Ç–∏–ø–æ–∫–æ–ª–µ–Ω–Ω–∞—è —Å–µ–º—å—è**
‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
‚Ä¢ –ö–æ–º—Ñ–æ—Ä—Ç –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤
‚Ä¢ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å

**–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ —Å–µ–º–µ–π–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(family_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_family_needs)
        
    except Exception as e:
        logger.error(f"Error asking family needs: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_family_needs)
async def handle_family_needs(message: Message, state: FSMContext):
    """Handle family needs response."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store family needs
        db_service.update_user_field(user_id, 'family_needs', message.text)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        await ask_personal_touch(message, state)
        
    except Exception as e:
        logger.error(f"Error handling family needs: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def ask_personal_touch(message: Message, state: FSMContext):
    """Ask for personal touch preferences."""
    try:
        personal_text = """üé≠ **–í–û–ü–†–û–° 15: –õ–∏—á–Ω—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã**

–ß—Ç–æ —Å–¥–µ–ª–∞–µ—Ç –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤–∞—à–∏–º?

**–õ–∏—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:**

üé® **–•–æ–±–±–∏ –∏ —É–≤–ª–µ—á–µ–Ω–∏—è**
‚Ä¢ –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–æ–Ω—ã
‚Ä¢ –ö–æ–ª–ª–µ–∫—Ü–∏–∏
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è

üåç **–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –∫–æ—Ä–Ω–∏**
‚Ä¢ –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–æ—Ç–∏–≤—ã
‚Ä¢ –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
‚Ä¢ –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
‚Ä¢ –°–µ–º–µ–π–Ω—ã–µ —Ä–µ–ª–∏–∫–≤–∏–∏

üíù **–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏**
‚Ä¢ –õ—é–±–∏–º—ã–µ —Ü–≤–µ—Ç–∞
‚Ä¢ –ó–Ω–∞—á–∏–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
‚Ä¢ –í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è
‚Ä¢ –õ–∏—á–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏

**–ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ —Å–¥–µ–ª–∞–µ—Ç –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤–∞—à–∏–º, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.**"""
        
        await message.answer(personal_text, parse_mode="Markdown")
        await state.set_state(DesignSurveyStates.waiting_personal_touch)
        
    except Exception as e:
        logger.error(f"Error asking personal touch: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@router.message(DesignSurveyStates.waiting_personal_touch)
async def handle_personal_touch(message: Message, state: FSMContext):
    """Handle personal touch response and complete survey."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Store personal touch
        db_service.update_user_field(user_id, 'personal_touch', message.text)
        db_service.update_user_field(user_id, 'survey_completed', True)
        db_service.update_user_field(user_id, 'in_survey_mode', False)
        
        # Store in conversation history
        db_service.add_conversation_message(user_id, message.text, "user")
        
        # Complete survey
        await complete_design_survey(message, state)
        
    except Exception as e:
        logger.error(f"Error handling personal touch: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def complete_design_survey(message: Message, state: FSMContext):
    """Complete the design survey and show professional summary."""
    try:
        user_id = message.from_user.id
        db_service = DatabaseService()
        
        # Get user session to show summary
        user_session = db_service.get_user_session(user_id)
        
        # Create professional summary
        summary = f"""üéâ **–ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ü–û –î–ò–ó–ê–ô–ù–£ –ò–ù–¢–ï–†–¨–ï–†–ê –ó–ê–í–ï–†–®–ï–ù!**

‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞! –¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –∏ –¥–∏–∑–∞–π–Ω–µ—Ä –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤.

üìä **–í–∞—à –¥–∏–∑–∞–π–Ω-–ø—Ä–æ—Ñ–∏–ª—å:**

üé® **–°—Ç–∏–ª—å:** {user_session.get('preferred_style', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üé® **–¶–≤–µ—Ç–∞:** {user_session.get('color_preference', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üèóÔ∏è **–ú–∞—Ç–µ—Ä–∏–∞–ª—ã:** {user_session.get('material_preference', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üè† **–¢–∏–ø –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞:** {user_session.get('space_type', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üö™ **–ü–æ–º–µ—â–µ–Ω–∏—è:** {user_session.get('room_preference', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üìê **–ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∞:** {user_session.get('layout_style', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
‚öôÔ∏è **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:** {user_session.get('functionality_preference', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üí° **–û—Å–≤–µ—â–µ–Ω–∏–µ:** {user_session.get('lighting_preference', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üóÑÔ∏è **–•—Ä–∞–Ω–µ–Ω–∏–µ:** {user_session.get('storage_preference', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üí∞ **–ë—é–¥–∂–µ—Ç:** {user_session.get('budget_range', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
‚è∞ **–í—Ä–µ–º—è:** {user_session.get('timeline', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üéØ **–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:** {user_session.get('project_priority', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üåü **–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏:** {user_session.get('lifestyle', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üë®‚Äçüë©‚Äçüëß‚Äçüë¶ **–°–µ–º—å—è:** {user_session.get('family_needs', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üé≠ **–õ–∏—á–Ω—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã:** {user_session.get('personal_touch', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}

üí° **–¢–µ–ø–µ—Ä—å —è –º–æ–≥—É –¥–∞–≤–∞—Ç—å –≤–∞–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π!**

üöÄ –ú–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –¥–∏–∑–∞–π–Ω—É, –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–µ, –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞."""
        
        # Store completion message in conversation history
        db_service.add_conversation_message(user_id, summary, "bot")
        
        await message.answer(summary, parse_mode="Markdown")
        
        # Clear state
        await state.clear()
        
        logger.info(f"User {user_id} completed the professional design survey")
        
    except Exception as e:
        logger.error(f"Error completing design survey: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞.")

@router.message(Command("survey"))
async def start_survey_english(message: Message, state: FSMContext):
    """Start survey in English."""
    try:
        user = message.from_user
        db_service = DatabaseService()
        
        # Clear any existing state
        await state.clear()
        
        # Set survey mode flag in database
        db_service.update_user_field(user.id, 'in_survey_mode', True)
        
        # Show survey introduction in English
        intro_text = """üé® **PROFESSIONAL INTERIOR DESIGN SURVEY**

Hello! I'm a professional architect and interior designer with 20+ years of experience.

üîç **What we'll discover:**
‚Ä¢ Your style and color preferences
‚Ä¢ Functional space requirements
‚Ä¢ Budget and timeline constraints
‚Ä¢ Lifestyle and family needs

üìä **15 professional questions:**
1-3: Style preferences
4-6: Spatial solutions
7-9: Functionality
10-12: Budget and time
13-15: Lifestyle

‚è± **Time:** 10-15 minutes

üöÄ **Let's start with style selection!**"""
        
        await message.answer(intro_text, parse_mode="Markdown")
        await ask_style_preference(message, state)
        
    except Exception as e:
        logger.error(f"Error starting English survey: {e}")
        await message.answer("An error occurred while starting the survey. Try /start")